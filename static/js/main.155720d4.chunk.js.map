{"version":3,"sources":["utils/actionTypes.js","actions/index.js","components/NumberSelect.js","components/Timer.js","containers/App.js","serviceWorker.js","reducers/createtimer.js","reducers/gametimer.js","reducers/index.js","index.js"],"names":["CREATE_TIMER","timerTable","PouchDB","createTimerOpen","type","createTimerClose","createTimerChange","key","value","createTimerRegister","dispatch","getState","_getState$createtimer","createtimer","hour","minute","second","put","_id","Date","then","result","loadGameTimer","allDocs","include_docs","results","console","log","_","forEach","rows","row","doc","NumberSelect","_this$props","this","props","min","max","step","other","Object","objectWithoutProperties","react_default","a","createElement","TextField_default","assign","select","map","range","num","MenuItem_default","slice","Component","defaultProps","Timer","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","start","moment","end","add","timer","state","text","getText","millis","diff","_this2","setState","prev","objectSpread","setInterval","update","_this3","clearInterval","_this4","seconds","Math","floor","minutes","_this5","Button_default","onClick","stop","App","actions","gametimer","classes","className","root","AppBar_default","position","Toolbar_default","variant","IconButton_default","menuButton","color","aria-label","Menu_default","Typography_default","timers","components_Timer","timerId","Fab_default","addButton","Add_default","Dialog_default","onClose","aria-labelledby","open","show","DialogTitle_default","id","components_NumberSelect","label","onChange","e","target","withStyles","theme","flexGrow","marginLeft","marginRight","bottom","spacing","unit","right","textField","width","menu","withTheme","connect","ownProps","bindActionCreators","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","initialState","arguments","length","undefined","action","defineProperty","currentTimerId","concat","reducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_containers_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.155720d4.chunk.js","sourcesContent":["export const CREATE_TIMER = {\r\n    OPEN: 'CREATE_TIMER.OPEN',\r\n    CHANGE: 'CREATE_TIMER.CHANGE',\r\n    CLOSE: 'CREATE_TIMER.CLOSE',\r\n    REGISTER: 'CREATE_TIMER.REGISTER'\r\n};\r\nexport const GAME_TIMER = {\r\n    LOAD: 'GAME_TIMER.LOAD'\r\n}","import { CREATE_TIMER } from '../utils/actionTypes';\r\nimport PouchDB from 'pouchdb';\r\nimport _ from 'lodash';\r\n\r\nconst timerTable = new PouchDB(\"TIMER\");\r\n\r\nexport const createTimerOpen = () => ({\r\n    type: CREATE_TIMER.OPEN\r\n});\r\nexport const createTimerClose = () => ({\r\n    type: CREATE_TIMER.CLOSE\r\n});\r\nexport const createTimerChange = (key, value) => ({\r\n    type: CREATE_TIMER.CHANGE,\r\n    key,\r\n    value\r\n});\r\nexport const createTimerRegister = () => {\r\n    return function (dispatch, getState) {\r\n        const { hour, minute, second } = getState().createtimer;\r\n        timerTable.put({ _id: new Date(), hour, minute, second }).then(result => {\r\n            dispatch(\r\n                {\r\n                    type: CREATE_TIMER.REGISTER,\r\n                    hour,\r\n                    minute,\r\n                    second\r\n                });\r\n            dispatch(createTimerClose());\r\n        });\r\n    };\r\n};\r\nexport const loadGameTimer = () => {\r\n    return function (dispatch) {\r\n        timerTable.allDocs({ include_docs: true }).then(results => {\r\n            console.log(results);\r\n            _.forEach(results.rows, (row) => {\r\n                dispatch({\r\n                    type: CREATE_TIMER.REGISTER,\r\n                    hour: row.doc.hour,\r\n                    minute: row.doc.minute,\r\n                    second: row.doc.second\r\n                });\r\n            });\r\n        });\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport _ from 'lodash';\r\n\r\nclass NumberSelect extends Component {\r\n    static defaultProps = {\r\n        step: 1\r\n    };\r\n    render() {\r\n        const { min, max, step, ...other } = this.props;\r\n        return <TextField\r\n            select\r\n            value={this.props.value}\r\n            {...other}\r\n        >\r\n            {_.map(_.range(min, max, step), (num => (\r\n                <MenuItem key={num} value={num}>\r\n                    {(\"00\" + num).slice(-2)}\r\n                </MenuItem>\r\n            )))}\r\n        </TextField>;\r\n    }\r\n}\r\nexport default NumberSelect;","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass Timer extends Component {\r\n    constructor(props) {\r\n        super();\r\n        var start = moment();\r\n        var end = moment(start)\r\n            .add(props.timer.hour, 'hours')\r\n            .add(props.timer.minute, 'minutes')\r\n            .add(props.timer.second, 'seconds');\r\n        this.state = {\r\n            start: null,\r\n            end: null,\r\n            text: this.getText(start, end),\r\n            timer: null,\r\n            millis: end.diff(start, 'seconds') * 1000\r\n        };\r\n    }\r\n    start() {\r\n        const INTERVAL = 16;\r\n        const { millis } = this.state;\r\n        var start = moment();\r\n        var end = moment().add(millis, 'milliseconds');\r\n        this.setState(prev => ({\r\n            ...prev,\r\n            start,\r\n            end,\r\n            timer: setInterval(() => this.update(), INTERVAL)\r\n        }));\r\n    }\r\n    stop() {\r\n        clearInterval(this.state.timer);\r\n        this.setState(prev => ({ ...prev, start: null, end: null, timer: null, millis: this.state.end.diff(moment(), 'milliseconds') }));\r\n    }\r\n    update() {\r\n        this.setState(prev => ({ ...prev, text: this.getText(moment(), prev.end) }));\r\n    }\r\n    getText(start, end) {\r\n        var diff = end.diff(start, 'milliseconds');\r\n        var millis = diff % 1000;\r\n        diff = Math.floor(diff / 1000);\r\n        var seconds = diff % 60;\r\n        diff = Math.floor(diff / 60);\r\n        var minutes = diff % 60;\r\n        diff = Math.floor(diff / 60);\r\n        var hours = diff;\r\n        return (\"00\" + hours).slice(-2)\r\n            + \":\" + (\"00\" + minutes).slice(-2)\r\n            + \":\" + (\"00\" + seconds).slice(-2)\r\n            + \".\" + (\"000\" + millis).slice(-3);\r\n    }\r\n    render() {\r\n        const { text } = this.state;\r\n        return <div>{text}<Button onClick={() => this.start()}>start</Button><Button onClick={() => this.stop()}>end</Button></div>\r\n    }\r\n}\r\nexport default Timer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport _ from 'lodash';\nimport './App.css';\nimport * as actions from '../actions';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport Button from '@material-ui/core/Button';\n\nimport NumberSelect from '../components/NumberSelect';\nimport Timer from '../components/Timer';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    props.actions.loadGameTimer();\n  }\n  render() {\n    const { gametimer, createtimer, actions, classes } = this.props;\n    return (\n      <div className={classes.root} >\n        <AppBar position=\"static\">\n          <Toolbar variant=\"dense\">\n            <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\">\n              Game Timer\n          </Typography>\n          </Toolbar>\n        </AppBar>\n        {\n          _.map(gametimer.timers, timer => <Timer key={timer.timerId} timer={timer} />)\n        }\n        <Fab color=\"secondary\" aria-label=\"Add\" className={classes.addButton} onClick={() => actions.createTimerOpen()}>\n          <AddIcon />\n        </Fab>\n\n        <Dialog onClose={() => actions.createTimerClose()} aria-labelledby=\"simple-dialog-title\" open={createtimer.show}>\n          <DialogTitle id=\"simple-dialog-title\">Create Timer</DialogTitle>\n          <div>\n            <NumberSelect\n              min=\"0\" max=\"99\"\n              label=\"hour\"\n              value={createtimer.hour}\n              onChange={(e) => actions.createTimerChange('hour', e.target.value)} />\n            <NumberSelect\n              min=\"0\" max=\"59\"\n              label=\"minute\"\n              value={createtimer.minute}\n              onChange={(e) => actions.createTimerChange('minute', e.target.value)} />\n            <NumberSelect\n              min=\"0\" max=\"59\"\n              label=\"second\"\n              value={createtimer.second}\n              onChange={(e) => actions.createTimerChange('second', e.target.value)} />\n            <Button onClick={() => actions.createTimerRegister()}>Register</Button>\n          </div>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state, ownProps) => ({\n  gametimer: state.gametimer,\n  createtimer: state.createtimer\n});\n\nfunction mapDispatch(dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch),\n  };\n}\n\nconst styles = (theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -18,\n    marginRight: 10,\n  },\n  addButton: {\n    position: 'absolute',\n    bottom: theme.spacing.unit * 2,\n    right: theme.spacing.unit * 2,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  },\n  menu: {\n    width: 200\n  }\n});\nexport default withStyles(styles, { withTheme: true })(connect(mapState, mapDispatch)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { CREATE_TIMER } from '../utils/actionTypes';\r\nconst initialState = {\r\n    show: false,\r\n    hour: 0,\r\n    minute: 0,\r\n    second: 0\r\n};\r\nconst createtimer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CREATE_TIMER.OPEN:\r\n            return {\r\n                ...state,\r\n                show: true,\r\n                hour: 0,\r\n                minute: 0,\r\n                second: 0\r\n            };\r\n        case CREATE_TIMER.CLOSE:\r\n            return {\r\n                ...state,\r\n                show: false\r\n            };\r\n        case CREATE_TIMER.CHANGE:\r\n            return {\r\n                ...state,\r\n                [action.key]: action.value\r\n            };\r\n        case CREATE_TIMER.REGISTER:\r\n            return {\r\n                ...state,\r\n                show: false\r\n            };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\nexport default createtimer;","import { CREATE_TIMER } from '../utils/actionTypes';\r\nimport _ from 'lodash';\r\n\r\nconst initialState = {\r\n    timers: [],\r\n    currentTimerId: 0\r\n};\r\nconst gametimer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CREATE_TIMER.REGISTER:\r\n            return {\r\n                ...state,\r\n                currentTimerId: state.currentTimerId + 1,\r\n                timers: _.concat(state.timers, {\r\n                    timerId: state.currentTimerId,\r\n                    hour: action.hour,\r\n                    minute: action.minute,\r\n                    second: action.second\r\n                })\r\n            };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\nexport default gametimer;","import { combineReducers } from 'redux';\r\nimport createtimer from './createtimer';\r\nimport gametimer from './gametimer';\r\n\r\nconst reducer = combineReducers({\r\n    createtimer,\r\n    gametimer\r\n});\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst store = createStore(reducer,\n    applyMiddleware(thunk));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}