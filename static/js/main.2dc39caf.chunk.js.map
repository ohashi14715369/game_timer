{"version":3,"sources":["utils/actionTypes.js","utils/sound.js","utils/dataConverter.js","actions/index.js","components/Timer.js","utils/reduxFormHelper.js","components/NumberSelect.js","components/TimerForm.js","containers/App.js","serviceWorker.js","reducers/createtimer.js","reducers/gametimer.js","reducers/index.js","index.js"],"names":["CREATE_TIMER","GAME_TIMER","audioContext","initAudioContext","audioContextCreator","createSoundBuffer","blob","callback","source","buffer","ArrayBuffer","Blob","reader","FileReader","onload","result","readAsArrayBuffer","TypeError","xhr","XMLHttpRequest","responseType","response","open","send","toArrayBuffer","decodeAudioData","audioBuffer","createBufferSource","connect","destination","timerTable","PouchDB","createTimerOpen","type","createTimerClose","createTimerChange","key","value","createTimerRegister","values","label","hour","minute","second","sound","errors","Object","objectSpread","keys","length","SubmissionError","_error","dispatch","instanceId","Date","_attachments","data","soundName","name","put","_id","then","readDbRow","timerDelete","get","doc","remove","addTimerInstance","timerInstance","loadGameTimer","allDocs","include_docs","results","console","log","_","forEach","rows","row","getAttachment","soundSource","showDrawer","hideDrawer","updateApp","navigator","serviceWorker","getRegistration","registration","unregister","window","location","reload","startTimer","notifyTimer","getStore","timers","gametimer","timer","find","silent","start","Notification","stopRinging","stop","Timer","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","moment","end","add","diff","getDiff","state","text","getText","millis","passed","_this2","_this$state","clearInterval","setState","prev","setInterval","update","actions","Math","min","_this3","_this4","notify","seconds","floor","minutes","slice","ringing","_this5","_this$props","classes","_this$state2","react_default","a","createElement","onClick","Typography_default","variant","gutterBottom","Icon_default","IconButton_default","color","className","button","aria-label","disabled","reset","delete","Component","withStyles","theme","margin","spacing","unit","bindActionCreators","renderTextField","_ref2","input","_ref2$meta","meta","touched","invalid","error","custom","objectWithoutProperties","TextField_default","assign","placeholder","helperText","renderFile","_ref3","_ref3$input","onChange","_ref3$meta","onFieldChange","buttonLabel","_ref3$accept","accept","_ref3$required","required","_ref3$rootClass","rootClass","FormControl_default","root","component","FormLabel_default","id","e","preventDefault","target","files","onBlur","htmlFor","Button_default","FormHelperText_default","NumberSelect","max","step","_this$props$meta","children","InputLabel_default","Select_default","map","range","num","MenuItem_default","_ref","renderFromHelper","defaultProps","TimerForm","handleSubmit","onSubmit","Field","reduxForm","form","initialValues","App","requestPermission","createtimer","AppBar_default","position","Toolbar_default","menuButton","Menu_default","Drawer_default","visibleDrawer","onClose","tabIndex","role","onKeyDown","list","List_default","ListItem_default","ListItemText_default","primary","components_Timer","Fab_default","addButton","Add_default","Dialog_default","aria-labelledby","show","DialogTitle_default","components_TimerForm","flexGrow","marginLeft","marginRight","bottom","right","textField","width","menu","withTheme","ownProps","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","register","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","initialState","arguments","undefined","action","defineProperty","temp","concat","chain","reject","reducer","combineReducers","formReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_containers_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2dc39caf.chunk.js","sourcesContent":["export const CREATE_TIMER = {\r\n    OPEN: 'CREATE_TIMER.OPEN',\r\n    CHANGE: 'CREATE_TIMER.CHANGE',\r\n    CLOSE: 'CREATE_TIMER.CLOSE',\r\n    REGISTER: 'CREATE_TIMER.REGISTER'\r\n};\r\nexport const GAME_TIMER = {\r\n    LOAD: 'GAME_TIMER.LOAD',\r\n    DELETE: 'GAME_TIMER.DELETE',\r\n    REGISTER_TIMER: 'GAME_TIMER.REGISTER_TIMER',\r\n    DELETE_TIMER: 'GAME_TIMER.DELETE_TIMER',\r\n    ADD_TIMER_INSTANCE: 'GAME_TIMER.ADD_TIMER_INSTANCE',\r\n    REMOVE_TIMER_INSTANCE: 'GAME_TIMER.REMOVE_TIMER_INSTANCE',\r\n    SHOW_DRAWER: 'GAME_TIMER.SHOW_DRAWER',\r\n    HIDE_DRAWER: 'GAME_TIMER.HIDE_DRAWER',\r\n    UPDATE_APP: 'GAME_TIMER.UPDATE_APP',\r\n    LOAD_AUDIO: 'GAME_TIMER.LOAD_AUDIO',\r\n    START_TIMER: 'GAME_TIMER.START_TIMER',\r\n    NOTIFY_TIMER: 'GAME_TIMER.NOTIFY_TIMER',\r\n    STOP_RINGING: 'GAME_TIMER.STOP_RINGING'\r\n}","import audioContextCreator from 'audio-context';\r\nimport { toArrayBuffer } from './dataConverter';\r\nvar audioContext = null;\r\n\r\nexport const initAudioContext = () => {\r\n    if (audioContext == null) {\r\n        audioContext = audioContextCreator();\r\n    }\r\n}\r\nexport const createSoundBuffer = (blob, callback) => {\r\n    initAudioContext();\r\n    toArrayBuffer(blob, (buffer) => {\r\n        audioContext.decodeAudioData(buffer, (audioBuffer) => {\r\n            var source = audioContext.createBufferSource();\r\n            source.buffer = audioBuffer;\r\n            source.connect(audioContext.destination);\r\n            callback(source);\r\n        });\r\n\r\n    });\r\n}\r\n\r\nexport const playSound = (source) => {\r\n    source.start(0);\r\n};\r\nexport const stopSound = (source) => {\r\n    source.stop();\r\n}","// @arg BlobURLString|URLString|Blob|File|TypedArray|ArrayBuffer\r\n// @arg Function - callback(result:ArrayBuffer, source:Any):void\r\nexport const toArrayBuffer = (source, callback) => {\r\n    if (source.buffer) {\r\n        // TypedArray\r\n        callback(source.buffer, source);\r\n    } else if (source instanceof ArrayBuffer) {\r\n        // ArrayBuffer\r\n        callback(source, source);\r\n    } else if (source instanceof Blob) {\r\n        // Blob or File\r\n        var reader = new FileReader();\r\n        reader.onload = function () {\r\n            callback(reader.result, source);\r\n        };\r\n        reader.readAsArrayBuffer(source);\r\n    } else if (typeof source === \"string\") {\r\n        // BlobURLString or URLString\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.responseType = \"arraybuffer\";\r\n        xhr.onload = function () {\r\n            callback(xhr.response, source);\r\n        };\r\n        xhr.open(\"GET\", source);\r\n        xhr.send();\r\n    } else {\r\n        throw new TypeError(\"Unknown type\");\r\n    }\r\n}","import { CREATE_TIMER, GAME_TIMER } from '../utils/actionTypes';\r\nimport PouchDB from 'pouchdb';\r\nimport { SubmissionError } from 'redux-form';\r\nimport _ from 'lodash';\r\nimport { initAudioContext, createSoundBuffer, playSound, stopSound } from '../utils/sound';\r\n\r\nconst timerTable = new PouchDB(\"TIMER\");\r\n\r\nexport const createTimerOpen = () => ({\r\n    type: CREATE_TIMER.OPEN\r\n});\r\nexport const createTimerClose = () => ({\r\n    type: CREATE_TIMER.CLOSE\r\n});\r\nexport const createTimerChange = (key, value) => ({\r\n    type: CREATE_TIMER.CHANGE,\r\n    key,\r\n    value\r\n});\r\nexport const createTimerRegister = (values) => {\r\n    const { label, hour, minute, second, sound } = values;\r\n    var errors = {};\r\n    if (!label) {\r\n        errors = { ...errors, second: 'Not empty' };\r\n    }\r\n    if (hour + minute + second === 0) {\r\n        errors = { ...errors, second: 'Not zero' };\r\n    }\r\n    if (Object.keys(errors).length > 0) {\r\n        throw new SubmissionError({ ...errors, _error: true });\r\n    }\r\n    return (dispatch) => {\r\n        const instanceId = new Date();\r\n        const _attachments = sound && {\r\n            sound: { type: sound.type, data: sound }\r\n        };\r\n        const soundName = sound && sound.name;\r\n        timerTable.put({\r\n            _id: instanceId,\r\n            _attachments,\r\n            label, hour, minute, second, soundName\r\n        }).then(result => {\r\n            readDbRow(dispatch, result);\r\n        });\r\n    };\r\n};\r\nexport const timerDelete = (instanceId) => {\r\n    return (dispatch) => {\r\n        timerTable.get(instanceId).then(doc => timerTable.remove(doc)).then(dispatch({\r\n            type: GAME_TIMER.DELETE,\r\n            instanceId\r\n        }));\r\n    };\r\n};\r\nexport const addTimerInstance = (timerInstance) => {\r\n    return {\r\n        type: GAME_TIMER.ADD_TIMER_INSTANCE,\r\n        ...timerInstance\r\n    };\r\n};\r\nexport const loadGameTimer = () => {\r\n    return function (dispatch) {\r\n        timerTable.allDocs({ include_docs: true }).then(results => {\r\n            console.log(\"load from db\");\r\n            _.forEach(results.rows, (row) => readDbRow(dispatch, row.doc));\r\n        });\r\n    }\r\n}\r\nconst readDbRow = (dispatch, row) => {\r\n    const { _id, label, hour, minute, second, soundName } = row;\r\n    if (soundName) {\r\n        timerTable.getAttachment(_id, 'sound').then(blob => {\r\n            createSoundBuffer(blob, soundSource => {\r\n                dispatch(addTimerInstance({\r\n                    instanceId: _id,\r\n                    label,\r\n                    hour,\r\n                    minute,\r\n                    second,\r\n                    soundName,\r\n                    soundSource\r\n                }));\r\n                dispatch(createTimerClose());\r\n            });\r\n        });\r\n    }\r\n    else {\r\n        dispatch(addTimerInstance({\r\n            instanceId: _id,\r\n            label,\r\n            hour,\r\n            minute,\r\n            second,\r\n            soundName,\r\n            soundSource: null\r\n        }));\r\n        dispatch(createTimerClose());\r\n    }\r\n}\r\nexport const showDrawer = () => { return { type: GAME_TIMER.SHOW_DRAWER }; }\r\nexport const hideDrawer = () => { return { type: GAME_TIMER.HIDE_DRAWER }; }\r\nexport const updateApp = () => {\r\n    return dispatch => {\r\n        navigator.serviceWorker.getRegistration()\r\n            .then(registration => {\r\n                if (registration) {\r\n                    registration.unregister();\r\n                }\r\n                window.location.reload(true);\r\n                dispatch({ type: GAME_TIMER.UPDATE_APP });\r\n            });\r\n    };\r\n}\r\nexport const startTimer = (instanceId) => {\r\n    initAudioContext();\r\n    return { type: GAME_TIMER.START_TIMER };\r\n}\r\nexport const notifyTimer = (instanceId) => {\r\n    return (dispatch, getStore) => {\r\n        const { timers } = getStore().gametimer;\r\n        var timer = _.find(timers, timer => timer.instanceId === instanceId);\r\n        var silent = false;\r\n        if (timer.soundSource) {\r\n            silent = true;\r\n            playSound(timer.soundSource);\r\n        }\r\n        new Notification(timer.label + \" was done!\", { silent });\r\n        dispatch({ type: GAME_TIMER.NOTIFY_TIMER, timer });\r\n    }\r\n};\r\nexport const stopRinging = (instanceId) => {\r\n    return (dispatch, getStore) => {\r\n        const { timers } = getStore().gametimer;\r\n        var timer = _.find(timers, timer => timer.instanceId === instanceId);\r\n        if (timer.soundSource) {\r\n            stopSound(timer.soundSource);\r\n        }\r\n        dispatch({ type: GAME_TIMER.STOP_RINGING, instanceId });\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport moment from 'moment';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport * as actions from '../actions';\r\n\r\nclass Timer extends Component {\r\n    constructor(props) {\r\n        super();\r\n        var start = moment();\r\n        var end = moment(start)\r\n            .add(props.timer.hour, 'hours')\r\n            .add(props.timer.minute, 'minutes')\r\n            .add(props.timer.second, 'seconds');\r\n        var diff = this.getDiff(start, end);\r\n        this.state = {\r\n            start: null,\r\n            end: null,\r\n            text: this.getText(diff),\r\n            timer: null,\r\n            millis: diff,\r\n            passed: 0\r\n        };\r\n    }\r\n    start() {\r\n        const INTERVAL = 16;\r\n        const { millis, passed } = this.state;\r\n        var start = moment();\r\n        var end = moment().add(millis - passed, 'milliseconds');\r\n        if (this.state.timer) {\r\n            clearInterval(this.state.timer);\r\n        }\r\n        this.setState(prev => ({\r\n            ...prev,\r\n            start,\r\n            end,\r\n            timer: setInterval(() => this.update(), INTERVAL)\r\n        }));\r\n        this.props.actions.startTimer(this.props.timer.instanceId);\r\n    }\r\n    stop() {\r\n        if (this.state.timer) {\r\n            var start = this.state.start;\r\n            var end = moment();\r\n            var diff = this.getDiff(start, end);\r\n            var passed = Math.min(this.state.passed + diff, this.state.millis);\r\n            var text = this.getText(this.state.millis - passed);\r\n            clearInterval(this.state.timer);\r\n            this.setState(prev => ({ ...prev, start: null, end: null, timer: null, passed, text }));\r\n        }\r\n    }\r\n    reset() {\r\n        const { millis } = this.state;\r\n        var start = moment();\r\n        var end = moment().add(millis, 'milliseconds');\r\n        this.setState(prev => ({\r\n            ...prev,\r\n            start,\r\n            end,\r\n            text: this.getText(this.getDiff(start, end)),\r\n            passed: 0\r\n        }));\r\n    }\r\n    update() {\r\n        var start = moment();\r\n        var end = this.state.end;\r\n        var diff = this.getDiff(start, end);\r\n        if (diff <= 0) {\r\n            this.stop();\r\n            this.notify();\r\n        }\r\n        else {\r\n            this.setState(prev => ({ ...prev, text: this.getText(diff) }));\r\n        }\r\n    }\r\n    getDiff(start, end) {\r\n        var diff = end.diff(start, 'milliseconds');\r\n        if (diff < 0) {\r\n            diff = 0;\r\n        }\r\n        return diff;\r\n    }\r\n    getText(diff) {\r\n        var millis = diff % 1000;\r\n        diff = Math.floor(diff / 1000);\r\n        var seconds = diff % 60;\r\n        diff = Math.floor(diff / 60);\r\n        var minutes = diff % 60;\r\n        diff = Math.floor(diff / 60);\r\n        var hours = diff;\r\n\r\n        return (\"00\" + hours).slice(-2)\r\n            + \":\" + (\"00\" + minutes).slice(-2)\r\n            + \":\" + (\"00\" + seconds).slice(-2)\r\n            + \".\" + (\"000\" + millis).slice(-3);\r\n    }\r\n    delete() {\r\n        if (this.state.timer) {\r\n            clearInterval(this.state.timer);\r\n        }\r\n        this.props.actions.timerDelete(this.props.timer.instanceId);\r\n    }\r\n    notify() {\r\n        this.props.actions.notifyTimer(this.props.timer.instanceId);\r\n    }\r\n    stopRinging() {\r\n        debugger;\r\n        if (this.props.timer.ringing) {\r\n            this.props.actions.stopRinging(this.props.timer.instanceId);\r\n        }\r\n    }\r\n    render() {\r\n        const { classes, timer } = this.props;\r\n        const { text, start } = this.state;\r\n        return <div onClick={() => this.stopRinging()}>\r\n            <Typography variant=\"subtitle1\" gutterBottom>{timer.label}</Typography>\r\n            <Typography variant=\"body1\" gutterBottom>{text}</Typography>\r\n            {this.props.timer.soundName ? <div><Icon></Icon>{this.props.timer.soundName}</div> : null}\r\n            <IconButton color=\"secondary\" className={classes.button} aria-label=\"start\"\r\n                onClick={() => this.start()} disabled={start != null}>\r\n                <Icon>play_arrow</Icon>\r\n            </IconButton>\r\n            <IconButton color=\"secondary\" className={classes.button} aria-label=\"stop\"\r\n                onClick={() => this.stop()} disabled={start == null}>\r\n                <Icon>pause</Icon>\r\n            </IconButton>\r\n            <IconButton color=\"secondary\" className={classes.button} aria-label=\"reset\"\r\n                onClick={() => this.reset()}>\r\n                <Icon>replay</Icon>\r\n            </IconButton>\r\n            <IconButton color=\"secondary\" className={classes.button} aria-label=\"delete\"\r\n                onClick={() => this.delete()}>\r\n                <Icon>delete</Icon>\r\n            </IconButton>\r\n        </div >\r\n    }\r\n}\r\nfunction mapDispatch(dispatch) {\r\n    return {\r\n        actions: bindActionCreators(actions, dispatch),\r\n    };\r\n}\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    }\r\n});\r\nexport default withStyles(styles)(connect(null, mapDispatch)(Timer));","import React from 'react';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport const renderFromHelper = ({ touched, error }) => {\r\n    if (!(touched && error)) {\r\n        return\r\n    } else {\r\n        return <FormHelperText>{touched && error}</FormHelperText>\r\n    }\r\n}\r\n\r\nexport const renderTextField = ({\r\n    label,\r\n    input,\r\n    meta: { touched, invalid, error },\r\n    ...custom\r\n}) => (\r\n        <TextField\r\n            label={label}\r\n            placeholder={label}\r\n            error={touched && invalid}\r\n            helperText={touched && error}\r\n            {...input}\r\n            {...custom}\r\n        />\r\n    )\r\n// File\r\nexport const renderFile =\r\n    ({\r\n        input: { value, name, onChange },\r\n        label,\r\n        meta: { touched, error },\r\n        classes,\r\n        onFieldChange,\r\n        buttonLabel,\r\n        accept = '*',\r\n        required = false,\r\n        rootClass = '',\r\n    }) => (\r\n            <FormControl classes={{ root: rootClass }} required={required} component='fieldset' error={!!(touched && error)}>\r\n                <FormLabel component='legend'>{label}</FormLabel>\r\n                <input\r\n                    accept={accept}\r\n                    id={name}\r\n                    type='file'\r\n                    onChange={e => {\r\n                        e.preventDefault()\r\n                        onChange(e.target.files[0])\r\n                        onFieldChange && onFieldChange(e.target.files[0])\r\n                    }}\r\n                    onBlur={() => { }}\r\n                />\r\n                <label htmlFor={name}>\r\n                    <Button variant='outlined' component='span'>\r\n                        {buttonLabel || 'ファイルを選択'}\r\n                    </Button>\r\n                </label>\r\n                <label>{value && value.name}</label>\r\n                {touched && error && <FormHelperText>{error}</FormHelperText>}\r\n            </FormControl>\r\n        )\r\n    ;","import React, { Component } from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport _ from 'lodash';\r\n\r\nimport { renderFromHelper } from '../utils/reduxFormHelper';\r\n\r\nclass NumberSelect extends Component {\r\n    static defaultProps = {\r\n        step: 1\r\n    };\r\n    render() {\r\n        const { id, min, max, step,\r\n            input,\r\n            label,\r\n            meta: { touched, error },\r\n            children,\r\n            ...custom } = this.props;\r\n        return <FormControl error={touched}>\r\n            <InputLabel>{label}</InputLabel>\r\n            <Select\r\n                {...input}\r\n                {...custom}\r\n            >\r\n                {_.map(_.range(min, max, step), (num => (\r\n                    <MenuItem key={num} value={num}>\r\n                        {(\"00\" + num).slice(-2)}\r\n                    </MenuItem>\r\n                )))}\r\n            </Select>\r\n            {renderFromHelper({ touched, error })}\r\n        </FormControl>;\r\n    }\r\n}\r\nexport default NumberSelect;\r\n","import React, { Component } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport NumberSelect from './NumberSelect';\r\nimport { renderTextField, renderFile } from '../utils/reduxFormHelper';\r\n\r\nclass TimerForm extends Component {\r\n    render() {\r\n        const { handleSubmit } = this.props;\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Field name=\"label\"\r\n                        component={renderTextField}\r\n                        label=\"label\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Field name=\"hour\"\r\n                        component={NumberSelect}\r\n                        props={{ min: 0, max: 99, label: \"hour\" }} />\r\n                    <Field name=\"minute\"\r\n                        component={NumberSelect}\r\n                        props={{ min: 0, max: 59, label: \"minute\" }} />\r\n                    <Field name=\"second\"\r\n                        component={NumberSelect}\r\n                        props={{ min: 0, max: 59, label: \"second\" }} />\r\n\r\n                    <Field name='sound' label='sound' accept='audio/*' component={renderFile} />\r\n                    <Button type=\"submit\">Register</Button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nTimerForm = reduxForm({\r\n    form: 'createTimer',\r\n    initialValues: {\r\n        hour: 0,\r\n        minute: 0,\r\n        second: 0\r\n    }\r\n})(TimerForm);\r\n\r\nexport default TimerForm;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport _ from 'lodash';\r\nimport './App.css';\r\nimport * as actions from '../actions';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nimport Timer from '../components/Timer';\r\nimport TimerForm from '../components/TimerForm';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        props.actions.loadGameTimer();\r\n        Notification.requestPermission().then(function (result) {\r\n        });\r\n    }\r\n    render() {\r\n        const { gametimer, createtimer, actions, classes } = this.props;\r\n        return (\r\n            <div className={classes.root} >\r\n                <AppBar position=\"static\">\r\n                    <Toolbar variant=\"dense\">\r\n                        <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\" onClick={() => actions.showDrawer()}>\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" color=\"inherit\">Game Timer</Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n\r\n                <Drawer open={gametimer.visibleDrawer} onClose={() => actions.hideDrawer()}>\r\n                    <div\r\n                        tabIndex={0}\r\n                        role=\"button\"\r\n                        onClick={() => actions.hideDrawer()}\r\n                        onKeyDown={() => actions.hideDrawer()}\r\n                    >\r\n                        <div className={classes.list}>\r\n                            <List>\r\n                                <ListItem button onClick={() => actions.updateApp()}>\r\n                                    <ListItemText primary=\"Update\" />\r\n                                </ListItem>\r\n                            </List>\r\n                        </div>\r\n                    </div>\r\n                </Drawer>\r\n                {\r\n                    _.map(gametimer.timers, timer => <Timer key={timer.instanceId} timer={timer} />)\r\n                }\r\n                <Fab color=\"secondary\" aria-label=\"Add\" className={classes.addButton} onClick={() => actions.createTimerOpen()}>\r\n                    <AddIcon />\r\n                </Fab>\r\n\r\n                <Dialog onClose={() => actions.createTimerClose()} aria-labelledby=\"simple-dialog-title\" open={createtimer.show}>\r\n                    <DialogTitle id=\"simple-dialog-title\">Create Timer</DialogTitle>\r\n                    <TimerForm onSubmit={(values) => actions.createTimerRegister(values)} />\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapState = (state, ownProps) => ({\r\n    gametimer: state.gametimer,\r\n    createtimer: state.createtimer\r\n});\r\n\r\nfunction mapDispatch(dispatch) {\r\n    return {\r\n        actions: bindActionCreators(actions, dispatch),\r\n    };\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginLeft: -18,\r\n        marginRight: 10,\r\n    },\r\n    addButton: {\r\n        position: 'absolute',\r\n        bottom: theme.spacing.unit * 2,\r\n        right: theme.spacing.unit * 2,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: 200,\r\n    },\r\n    menu: {\r\n        width: 200\r\n    }\r\n});\r\nexport default withStyles(styles, { withTheme: true })(connect(mapState, mapDispatch)(App));\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { CREATE_TIMER } from '../utils/actionTypes';\r\nconst initialState = {\r\n    show: false,\r\n    hour: 0,\r\n    minute: 0,\r\n    second: 0\r\n};\r\nconst createtimer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CREATE_TIMER.OPEN:\r\n            return {\r\n                ...state,\r\n                show: true,\r\n                hour: 0,\r\n                minute: 0,\r\n                second: 0\r\n            };\r\n        case CREATE_TIMER.CLOSE:\r\n            return {\r\n                ...state,\r\n                show: false\r\n            };\r\n        case CREATE_TIMER.CHANGE:\r\n            return {\r\n                ...state,\r\n                [action.key]: action.value\r\n            };\r\n        case CREATE_TIMER.REGISTER:\r\n            return {\r\n                ...state,\r\n                show: false\r\n            };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\nexport default createtimer;","import { GAME_TIMER } from '../utils/actionTypes';\r\nimport _ from 'lodash';\r\n\r\nconst initialState = {\r\n    timers: [],\r\n    visibleDrawer: false\r\n};\r\nconst gametimer = (state = initialState, action) => {\r\n    console.log(action);\r\n    switch (action.type) {\r\n        case GAME_TIMER.ADD_TIMER_INSTANCE:\r\n            var temp = Object.assign({}, action);\r\n            delete temp[\"type\"];\r\n            return {\r\n                ...state,\r\n                timers: _.concat(state.timers, {\r\n                    ...temp,\r\n                    audioBuffer: null\r\n                })\r\n            };\r\n        case GAME_TIMER.REMOVE_TIMER_INSTANCE:\r\n            return {\r\n                ...state,\r\n                timers: _.chain(state.timers).reject(timer => timer.instanceId === action.instanceId).value()\r\n            };\r\n        case GAME_TIMER.SHOW_DRAWER:\r\n            return {\r\n                ...state,\r\n                visibleDrawer: true\r\n            };\r\n        case GAME_TIMER.HIDE_DRAWER:\r\n            return {\r\n                ...state,\r\n                visibleDrawer: false\r\n            };\r\n        case GAME_TIMER.UPDATE_APP:\r\n            return { ...state };\r\n        case GAME_TIMER.NOTIFY_TIMER: {\r\n            const { instanceId } = action.timer;\r\n            var ret = {\r\n                ...state,\r\n                timers: _.chain(state.timers).map(timer => {\r\n                    if (timer.instanceId === instanceId) {\r\n                        return { ...timer, ringing: true }\r\n                    } else {\r\n                        return timer;\r\n                    }\r\n                }).value()\r\n            };\r\n            return ret;\r\n        }\r\n        case GAME_TIMER.STOP_RINGING: {\r\n            const { instanceId } = action;\r\n            return {\r\n                ...state,\r\n                timers: _.chain(state.timers).map(timer => {\r\n                    if (timer.instanceId === instanceId) {\r\n                        return { ...timer, ringing: false }\r\n                    } else {\r\n                        return timer;\r\n                    }\r\n                }).value()\r\n            };\r\n        }\r\n        case GAME_TIMER.LOAD_AUDIO: {\r\n            const { instanceId, soundSource } = action;\r\n            return {\r\n                ...state,\r\n                timers: _.chain(state.timers).map(timer => {\r\n                    if (timer.instanceId === instanceId) {\r\n                        return { ...timer, soundSource }\r\n                    } else {\r\n                        return timer;\r\n                    }\r\n                }).value()\r\n            };\r\n        }\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\nexport default gametimer;","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport createtimer from './createtimer';\r\nimport gametimer from './gametimer';\r\n\r\nconst reducer = combineReducers({\r\n    form:formReducer,\r\n    createtimer,\r\n    gametimer\r\n});\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst store = createStore(reducer,\n    applyMiddleware(thunk));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}