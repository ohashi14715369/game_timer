{"version":3,"sources":["utils/actionTypes.js","actions/index.js","components/Timer.js","utils/reduxFormHelper.js","components/NumberSelect.js","components/TimerForm.js","containers/App.js","serviceWorker.js","reducers/createtimer.js","reducers/gametimer.js","reducers/index.js","index.js"],"names":["CREATE_TIMER","GAME_TIMER","LOAD","DELETE","SHOW_DRAWER","HIDE_DRAWER","UPDATE_APP","timerTable","PouchDB","createTimerOpen","type","createTimerClose","createTimerChange","key","value","createTimerRegister","values","label","hour","minute","second","SubmissionError","_error","dispatch","id","Date","put","_id","then","result","timerDelete","get","doc","remove","loadGameTimer","allDocs","include_docs","results","console","log","_","forEach","rows","row","showDrawer","hideDrawer","updateApp","Timer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","start","moment","end","add","timer","diff","getDiff","state","text","getText","millis","passed","_this2","_this$state","clearInterval","setState","prev","objectSpread","setInterval","update","Math","min","_this3","_this4","stop","notify","seconds","floor","minutes","slice","actions","Notification","silent","_this5","classes","_this$state2","react_default","a","createElement","Typography_default","variant","gutterBottom","IconButton_default","color","className","button","aria-label","onClick","disabled","Icon_default","reset","delete","Component","withStyles","theme","margin","spacing","unit","connect","bindActionCreators","renderTextField","_ref2","input","_ref2$meta","meta","touched","invalid","error","custom","objectWithoutProperties","TextField_default","assign","placeholder","helperText","NumberSelect","_this$props","max","step","_this$props$meta","children","FormControl_default","InputLabel_default","Select_default","map","range","num","MenuItem_default","_ref","FormHelperText_default","renderFromHelper","defaultProps","TimerForm","handleSubmit","onSubmit","Field","name","component","Button_default","reduxForm","form","initialValues","App","requestPermission","gametimer","createtimer","root","AppBar_default","position","Toolbar_default","menuButton","Menu_default","Drawer_default","open","visibleDrawer","onClose","tabIndex","role","onKeyDown","list","List_default","ListItem_default","ListItemText_default","primary","timers","components_Timer","Fab_default","addButton","Add_default","Dialog_default","aria-labelledby","show","DialogTitle_default","components_TimerForm","flexGrow","marginLeft","marginRight","bottom","right","textField","width","menu","withTheme","ownProps","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","initialState","arguments","length","undefined","action","defineProperty","concat","chain","reject","CLOSE_DRAWER","getRegistration","unregister","reducer","combineReducers","formReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_containers_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2da172eb.chunk.js","sourcesContent":["export const CREATE_TIMER = {\r\n    OPEN: 'CREATE_TIMER.OPEN',\r\n    CHANGE: 'CREATE_TIMER.CHANGE',\r\n    CLOSE: 'CREATE_TIMER.CLOSE',\r\n    REGISTER: 'CREATE_TIMER.REGISTER'\r\n};\r\nexport const GAME_TIMER = {\r\n    LOAD: 'GAME_TIMER.LOAD',\r\n    DELETE: 'GAME_TIMER.DELETE',\r\n    SHOW_DRAWER: 'GAME_TIMER.SHOW_DRAWER',\r\n    HIDE_DRAWER: 'GAME_TIMER.HIDE_DRAWER',\r\n    UPDATE_APP: 'GAME_TIMER.UPDATE_APP'\r\n}","import { CREATE_TIMER, GAME_TIMER } from '../utils/actionTypes';\r\nimport PouchDB from 'pouchdb';\r\nimport { SubmissionError } from 'redux-form';\r\nimport _ from 'lodash';\r\n\r\nconst timerTable = new PouchDB(\"TIMER\");\r\n\r\nexport const createTimerOpen = () => ({\r\n    type: CREATE_TIMER.OPEN\r\n});\r\nexport const createTimerClose = () => ({\r\n    type: CREATE_TIMER.CLOSE\r\n});\r\nexport const createTimerChange = (key, value) => ({\r\n    type: CREATE_TIMER.CHANGE,\r\n    key,\r\n    value\r\n});\r\nexport const createTimerRegister = (values) => {\r\n    const { label, hour, minute, second } = values;\r\n    if (!label) {\r\n        throw new SubmissionError({\r\n            label: 'Not Empty',\r\n            _error: 'Not Empty'\r\n        });\r\n    }\r\n    if (hour + minute + second === 0) {\r\n        throw new SubmissionError({\r\n            second: 'Not Zero',\r\n            _error: 'Not Zero'\r\n        });\r\n    }\r\n    return (dispatch) => {\r\n        const id = new Date();\r\n        timerTable.put({ _id: id, label, hour, minute, second }).then(result => {\r\n            dispatch(\r\n                {\r\n                    type: CREATE_TIMER.REGISTER,\r\n                    id,\r\n                    label,\r\n                    hour,\r\n                    minute,\r\n                    second\r\n                });\r\n            dispatch(createTimerClose());\r\n        });\r\n    };\r\n};\r\nexport const timerDelete = (id) => {\r\n    return (dispatch) => {\r\n        timerTable.get(id).then(doc => timerTable.remove(doc)).then(dispatch({\r\n            type: GAME_TIMER.DELETE,\r\n            id\r\n        }));\r\n    };\r\n};\r\nexport const loadGameTimer = () => {\r\n    return function (dispatch) {\r\n        timerTable.allDocs({ include_docs: true }).then(results => {\r\n            console.log(results);\r\n            _.forEach(results.rows, (row) => {\r\n                dispatch({\r\n                    type: CREATE_TIMER.REGISTER,\r\n                    id: row.doc._id,\r\n                    label: row.doc.label,\r\n                    hour: row.doc.hour,\r\n                    minute: row.doc.minute,\r\n                    second: row.doc.second\r\n                });\r\n            });\r\n        });\r\n    }\r\n}\r\nexport const showDrawer = () => { return { type: GAME_TIMER.SHOW_DRAWER }; }\r\nexport const hideDrawer = () => { return { type: GAME_TIMER.HIDE_DRAWER }; }\r\nexport const updateApp = () => { return { type: GAME_TIMER.UPDATE_APP }; }","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport moment from 'moment';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport * as actions from '../actions';\r\n\r\nclass Timer extends Component {\r\n    constructor(props) {\r\n        super();\r\n        var start = moment();\r\n        var end = moment(start)\r\n            .add(props.timer.hour, 'hours')\r\n            .add(props.timer.minute, 'minutes')\r\n            .add(props.timer.second, 'seconds');\r\n        var diff = this.getDiff(start, end);\r\n        this.state = {\r\n            start: null,\r\n            end: null,\r\n            text: this.getText(diff),\r\n            timer: null,\r\n            millis: diff,\r\n            passed: 0,\r\n            label:props.timer.label\r\n        };\r\n    }\r\n    start() {\r\n        const INTERVAL = 16;\r\n        const { millis, passed } = this.state;\r\n        var start = moment();\r\n        var end = moment().add(millis - passed, 'milliseconds');\r\n        if (this.state.timer) {\r\n            clearInterval(this.state.timer);\r\n        }\r\n        this.setState(prev => ({\r\n            ...prev,\r\n            start,\r\n            end,\r\n            timer: setInterval(() => this.update(), INTERVAL)\r\n        }));\r\n    }\r\n    stop() {\r\n        if (this.state.timer) {\r\n            var start = this.state.start;\r\n            var end = moment();\r\n            var diff = this.getDiff(start, end);\r\n            var passed = Math.min(this.state.passed + diff, this.state.millis);\r\n            var text = this.getText(this.state.millis - passed);\r\n            clearInterval(this.state.timer);\r\n            this.setState(prev => ({ ...prev, start: null, end: null, timer: null, passed, text }));\r\n        }\r\n    }\r\n    reset() {\r\n        const { millis } = this.state;\r\n        var start = moment();\r\n        var end = moment().add(millis, 'milliseconds');\r\n        this.setState(prev => ({\r\n            ...prev,\r\n            start,\r\n            end,\r\n            text: this.getText(this.getDiff(start, end)),\r\n            passed: 0\r\n        }));\r\n    }\r\n    update() {\r\n        var start = moment();\r\n        var end = this.state.end;\r\n        var diff = this.getDiff(start, end);\r\n        if (diff <= 0) {\r\n            this.stop();\r\n            this.notify();\r\n        }\r\n        else {\r\n            this.setState(prev => ({ ...prev, text: this.getText(diff) }));\r\n        }\r\n    }\r\n    getDiff(start, end) {\r\n        var diff = end.diff(start, 'milliseconds');\r\n        if (diff < 0) {\r\n            diff = 0;\r\n        }\r\n        return diff;\r\n    }\r\n    getText(diff) {\r\n        var millis = diff % 1000;\r\n        diff = Math.floor(diff / 1000);\r\n        var seconds = diff % 60;\r\n        diff = Math.floor(diff / 60);\r\n        var minutes = diff % 60;\r\n        diff = Math.floor(diff / 60);\r\n        var hours = diff;\r\n\r\n        return (\"00\" + hours).slice(-2)\r\n            + \":\" + (\"00\" + minutes).slice(-2)\r\n            + \":\" + (\"00\" + seconds).slice(-2)\r\n            + \".\" + (\"000\" + millis).slice(-3);\r\n    }\r\n    delete() {\r\n        if (this.state.timer) {\r\n            clearInterval(this.state.timer);\r\n        }\r\n        this.props.actions.timerDelete(this.props.timer.id);\r\n    }\r\n    notify() {\r\n        new Notification(this.state.label + \" was done!\", {silent:true});\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { text, timer, label } = this.state;\r\n        return <div>\r\n            <Typography variant=\"subtitle1\" gutterBottom>{label}</Typography>\r\n            <Typography variant=\"body1\" gutterBottom>{text}</Typography>\r\n            <IconButton color=\"secondary\" className={classes.button} aria-label=\"start\"\r\n                onClick={() => this.start()} disabled={timer != null}>\r\n                <Icon>play_arrow</Icon>\r\n            </IconButton>\r\n            <IconButton color=\"secondary\" className={classes.button} aria-label=\"stop\"\r\n                onClick={() => this.stop()} disabled={timer == null}>\r\n                <Icon>pause</Icon>\r\n            </IconButton>\r\n            <IconButton color=\"secondary\" className={classes.button} aria-label=\"reset\"\r\n                onClick={() => this.reset()}>\r\n                <Icon>replay</Icon>\r\n            </IconButton>\r\n            <IconButton color=\"secondary\" className={classes.button} aria-label=\"delete\"\r\n                onClick={() => this.delete()}>\r\n                <Icon>delete</Icon>\r\n            </IconButton>\r\n        </div >\r\n    }\r\n}\r\nfunction mapDispatch(dispatch) {\r\n    return {\r\n        actions: bindActionCreators(actions, dispatch),\r\n    };\r\n}\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    }\r\n});\r\nexport default withStyles(styles)(connect(null, mapDispatch)(Timer));","import React from 'react';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport const renderFromHelper = ({ touched, error }) => {\r\n    if (!(touched && error)) {\r\n        return\r\n    } else {\r\n        return <FormHelperText>{touched && error}</FormHelperText>\r\n    }\r\n}\r\n\r\nexport const renderTextField = ({\r\n    label,\r\n    input,\r\n    meta: { touched, invalid, error },\r\n    ...custom\r\n}) => (\r\n        <TextField\r\n            label={label}\r\n            placeholder={label}\r\n            error={touched && invalid}\r\n            helperText={touched && error}\r\n            {...input}\r\n            {...custom}\r\n        />\r\n    )","import React, { Component } from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport _ from 'lodash';\r\n\r\nimport { renderFromHelper } from '../utils/reduxFormHelper';\r\n\r\nclass NumberSelect extends Component {\r\n    static defaultProps = {\r\n        step: 1\r\n    };\r\n    render() {\r\n        const { id, min, max, step,\r\n            input,\r\n            label,\r\n            meta: { touched, error },\r\n            children,\r\n            ...custom } = this.props;\r\n        return <FormControl error={touched}>\r\n            <InputLabel>{label}</InputLabel>\r\n            <Select\r\n                {...input}\r\n                {...custom}\r\n            >\r\n                {_.map(_.range(min, max, step), (num => (\r\n                    <MenuItem key={num} value={num}>\r\n                        {(\"00\" + num).slice(-2)}\r\n                    </MenuItem>\r\n                )))}\r\n            </Select>\r\n            {renderFromHelper({ touched, error })}\r\n        </FormControl>;\r\n    }\r\n}\r\nexport default NumberSelect;\r\n","import React, { Component } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport NumberSelect from './NumberSelect';\r\nimport { renderTextField } from '../utils/reduxFormHelper';\r\n\r\nclass TimerForm extends Component {\r\n    render() {\r\n        const { handleSubmit } = this.props;\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Field name=\"label\"\r\n                        component={renderTextField}\r\n                        label=\"label\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Field name=\"hour\"\r\n                        component={NumberSelect}\r\n                        props={{ min: 0, max: 99, label: \"hour\" }} />\r\n                    <Field name=\"minute\"\r\n                        component={NumberSelect}\r\n                        props={{ min: 0, max: 59, label: \"minute\" }} />\r\n                    <Field name=\"second\"\r\n                        component={NumberSelect}\r\n                        props={{ min: 0, max: 59, label: \"second\" }} />\r\n                    <Button type=\"submit\">Register</Button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nTimerForm = reduxForm({\r\n    form: 'createTimer',\r\n    initialValues: {\r\n        hour: 0,\r\n        minute: 0,\r\n        second: 0\r\n    }\r\n})(TimerForm);\r\n\r\nexport default TimerForm;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport _ from 'lodash';\r\nimport './App.css';\r\nimport * as actions from '../actions';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nimport Timer from '../components/Timer';\r\nimport TimerForm from '../components/TimerForm';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        props.actions.loadGameTimer();\r\n        Notification.requestPermission().then(function (result) {\r\n        });\r\n    }\r\n    render() {\r\n        const { gametimer, createtimer, actions, classes } = this.props;\r\n        return (\r\n            <div className={classes.root} >\r\n                <AppBar position=\"static\">\r\n                    <Toolbar variant=\"dense\">\r\n                        <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\" onClick={() => actions.showDrawer()}>\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" color=\"inherit\">Game Timer</Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n\r\n                <Drawer open={gametimer.visibleDrawer} onClose={() => actions.hideDrawer()}>\r\n                    <div\r\n                        tabIndex={0}\r\n                        role=\"button\"\r\n                        onClick={() => actions.hideDrawer()}\r\n                        onKeyDown={() => actions.hideDrawer()}\r\n                    >\r\n                        <div className={classes.list}>\r\n                            <List>\r\n                                <ListItem button onClick={() => actions.updateApp()}>\r\n                                    <ListItemText primary=\"Update\" />\r\n                                </ListItem>\r\n                            </List>\r\n                        </div>\r\n                    </div>\r\n                </Drawer>\r\n                {\r\n                    _.map(gametimer.timers, timer => <Timer key={timer.id} timer={timer} />)\r\n                }\r\n                <Fab color=\"secondary\" aria-label=\"Add\" className={classes.addButton} onClick={() => actions.createTimerOpen()}>\r\n                    <AddIcon />\r\n                </Fab>\r\n\r\n                <Dialog onClose={() => actions.createTimerClose()} aria-labelledby=\"simple-dialog-title\" open={createtimer.show}>\r\n                    <DialogTitle id=\"simple-dialog-title\">Create Timer</DialogTitle>\r\n                    <TimerForm onSubmit={(values) => actions.createTimerRegister(values)} />\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapState = (state, ownProps) => ({\r\n    gametimer: state.gametimer,\r\n    createtimer: state.createtimer\r\n});\r\n\r\nfunction mapDispatch(dispatch) {\r\n    return {\r\n        actions: bindActionCreators(actions, dispatch),\r\n    };\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginLeft: -18,\r\n        marginRight: 10,\r\n    },\r\n    addButton: {\r\n        position: 'absolute',\r\n        bottom: theme.spacing.unit * 2,\r\n        right: theme.spacing.unit * 2,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: 200,\r\n    },\r\n    menu: {\r\n        width: 200\r\n    }\r\n});\r\nexport default withStyles(styles, { withTheme: true })(connect(mapState, mapDispatch)(App));\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { CREATE_TIMER } from '../utils/actionTypes';\r\nconst initialState = {\r\n    show: false,\r\n    hour: 0,\r\n    minute: 0,\r\n    second: 0\r\n};\r\nconst createtimer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CREATE_TIMER.OPEN:\r\n            return {\r\n                ...state,\r\n                show: true,\r\n                hour: 0,\r\n                minute: 0,\r\n                second: 0\r\n            };\r\n        case CREATE_TIMER.CLOSE:\r\n            return {\r\n                ...state,\r\n                show: false\r\n            };\r\n        case CREATE_TIMER.CHANGE:\r\n            return {\r\n                ...state,\r\n                [action.key]: action.value\r\n            };\r\n        case CREATE_TIMER.REGISTER:\r\n            return {\r\n                ...state,\r\n                show: false\r\n            };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\nexport default createtimer;","import { CREATE_TIMER, GAME_TIMER } from '../utils/actionTypes';\r\nimport _ from 'lodash';\r\n\r\nconst initialState = {\r\n    timers: [],\r\n    visibleDrawer: false\r\n};\r\nconst gametimer = (state = initialState, action) => {\r\n    console.log(action);\r\n    switch (action.type) {\r\n        case CREATE_TIMER.REGISTER:\r\n            return {\r\n                ...state,\r\n                timers: _.concat(state.timers, {\r\n                    id: action.id,\r\n                    label: action.label,\r\n                    hour: action.hour,\r\n                    minute: action.minute,\r\n                    second: action.second\r\n                })\r\n            };\r\n        case GAME_TIMER.DELETE:\r\n            return {\r\n                ...state,\r\n                timers: _.chain(state.timers).reject(timer => timer.id === action.id).value()\r\n            };\r\n        case GAME_TIMER.SHOW_DRAWER:\r\n            return {\r\n                ...state,\r\n                visibleDrawer: true\r\n            };\r\n        case GAME_TIMER.CLOSE_DRAWER:\r\n            return {\r\n                ...state,\r\n                visibleDrawer: false\r\n            };\r\n        case GAME_TIMER.UPDATE_APP:\r\n            navigator.serviceWorker.getRegistration()\r\n                .then(registration => {\r\n                    registration.unregister();\r\n                });\r\n            return { ...state };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\nexport default gametimer;","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport createtimer from './createtimer';\r\nimport gametimer from './gametimer';\r\n\r\nconst reducer = combineReducers({\r\n    form:formReducer,\r\n    createtimer,\r\n    gametimer\r\n});\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst store = createStore(reducer,\n    applyMiddleware(thunk));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}